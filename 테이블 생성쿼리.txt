drop table NOTICE; 
drop table BOOKMARK;
drop table ORDERS_MENU;
drop table ORDERS;
drop table CART;
drop table STATUS;
drop table PRODUCT;
drop table COUPON;
drop table ALARM;
drop table REVENUE;
drop table B_MEMBER;
drop table S_MEMBER;


drop sequence C_IDX_SEQ; --장바구니 번호
drop sequence CU_IDX_SEQ; --쿠폰 번호
drop sequence P_IDX_SEQ; --상품 번호
drop sequence O_IDX_SEQ; --주문내역 번호
drop sequence N_IDX_SEQ;  --게시글 번호
drop sequence B_IDX_SEQ;  --즐겨찾기 번호


--구매자 회원 테이블
CREATE TABLE B_MEMBER(
 B_PHONE VARCHAR2(13) PRIMARY KEY, --전화번호(ID)
 B_PASSWORD VARCHAR2(30) NOT NULL, --비밀번호
 B_NAME VARCHAR2(30) NOT NULL, --이름,
 B_BIRTH DATE NOT NULL,--생년월일
 B_NICKNAME VARCHAR2(30) NOT NULL, --닉네임
 B_DATE DATE  DEFAULT SYSDATE NOT NULL, -- 회원가입날짜
 STAMP NUMBER -- 스탬프
);

--판매자 회원 테이블
CREATE TABLE S_MEMBER(
 STORE NUMBER PRIMARY KEY, -- 지점번호(ID)
 S_PASSWORD VARCHAR2(30) NOT NULL, -- 비밀번호
 S_NAME VARCHAR2(300) NOT NULL, -- 지점명
 S_MANAGER VARCHAR2(300) NOT NULL, -- 지점장명
 ADDRESS1 VARCHAR2(300), -- 주소
 ADDRESS2 VARCHAR2(300), -- 상세 주소
 POSTCODE VARCHAR2(7) NOT NULL, -- 우편 번호
 S_PHONE VARCHAR2(11) NULL, -- 지점 전화번호
 S_DATE DATE DEFAULT SYSDATE NOT NULL, -- 회원가입날짜
 S_STATUS NUMBER DEFAULT 0 NOT NULL, -- 지점 상태 ( 1 영업중 , 0 마감)
 DEL_GB VARCHAR2(1)  DEFAULT 'N' NOT NULL -- 삭제 유무
);


--매출 테이블
CREATE TABLE REVENUE(
 R_IDX NUMBER,  -- 매장IDX
 R_DATE DATE DEFAULT SYSDATE NOT NULL,-- 매출일
 R_SUM NUMBER NOT NULL, -- 매출합계
 OR_COUNT NUMBER  NOT NULL -- 주문건수
);

 alter table REVENUE add constraint FK_R_IDX
 foreign key (R_IDX) references S_MEMBER (STORE) on delete cascade;

 
--알림 테이블
CREATE TABLE ALARM(
 ALARM NUMBER NOT NULL, -- 알림종류(1:접수대기, 2:제조중, 3:제조완료, 4:쿠폰발급, 5: 공지 , 6: 이벤트)
 A_STORE NUMBER , -- 매장IDX
 AB_IDX VARCHAR2(13),  -- 구매자IDX
 ISREAD NUMBER DEFAULT 0 NOT NULL -- 읽음 여부 0: 안읽음, 1: 읽음 
);

 alter table ALARM add constraint FK_A_STORE
 foreign key (A_STORE) references S_MEMBER (STORE) on delete cascade;

 alter table ALARM add constraint FK_AB_IDX
 foreign key (AB_IDX) references B_MEMBER (B_PHONE) on delete cascade;



--쿠폰테이블
CREATE TABLE COUPON(
 CU_IDX NUMBER PRIMARY KEY, -- 쿠폰번호
 COUPON VARCHAR2(100) NOT NULL, -- 쿠폰이름
 CU_PRICE NUMBER NOT NULL, -- 쿠폰가격
 CUB_IDX VARCHAR2(13) NOT NULL, -- 구매자 IDX
 CU_LIMIT DATE NOT NULL, --쿠폰 유효기간
 CU_USE VARCHAR2(1) DEFAULT 'N' NOT NULL -- 쿠폰 사용 여부 'N' = 사용안함(사용가능)  , 'Y' = 사용함(사용불가)
);

CREATE SEQUENCE CU_IDX_SEQ
 START WITH 1
 INCREMENT BY 1;

 alter table COUPON add constraint FK_CUB_IDX
 foreign key (CUB_IDX) references B_MEMBER (B_PHONE) on delete cascade;
--스탬프 10개 받을 시 쿠폰 생성 후 스탬프 초기화 트리거
CREATE OR REPLACE TRIGGER CREA_COUPON
 BEFORE UPDATE OF STAMP ON B_MEMBER
 FOR EACH ROW
 WHEN (OLD.STAMP<10 AND NEW.STAMP>=10)
 BEGIN
 INSERT INTO COUPON(CU_IDX, COUPON, CU_PRICE, CUB_IDX, CU_LIMIT,CU_USE) 
               VALUES(CU_IDX_SEQ.NEXTVAL, '스탬프쿠폰', 2000, :OLD.B_PHONE, SYSDATE+(INTERVAL '6' MONTH),'N');
 IF:NEW.STAMP>=10 THEN 
   :NEW.STAMP:=:NEW.STAMP-10;
   END IF;
 END CREA_COUPON;



--상품테이블
CREATE TABLE PRODUCT(
 P_IDX NUMBER PRIMARY KEY, -- 상품번호
 P_NAME VARCHAR2(100) NOT NULL, -- 상품이름
 P_IMG VARCHAR2(80) NOT NULL, -- 상품이미지
 P_CONTENT VARCHAR2(1000) NOT NULL, -- 상품설명
 P_PRICE NUMBER NOT NULL, -- 상품가격
P_CATEGORY VARCHAR2(1) NOT NULL -- 상품종류 ex)'C': 커피, 'J': 주스, 'A': 에이드, 'S':스무디, 'D':디저트
);

CREATE SEQUENCE P_IDX_SEQ
 START WITH 1
 INCREMENT BY 1;



--상품상태 테이블
CREATE TABLE STATUS(
 SS_IDX NUMBER(10) NOT NULL, -- 매장번호
 SP_IDX NUMBER NOT NULL, -- 상품번호
 S_SO VARCHAR2(1) DEFAULT 'N' NOT NULL -- 품절여부 N : 판매 , Y : 품절
);

 alter table STATUS add constraint FK_SS_IDX
 foreign key (SS_IDX) references S_MEMBER (STORE) on delete cascade;

 alter table STATUS add constraint FK_SP_IDX
 foreign key (SP_IDX) references PRODUCT (P_IDX) on delete cascade;



--장바구니 테이블
CREATE TABLE CART(
 CP_NAME VARCHAR2(100), -- 상품이름 
 CP_IMG VARCHAR2(100), --상품이미지
 C_PRICE NUMBER NOT NULL, -- 가격
 C_OP VARCHAR2(3000) NOT NULL, -- 옵션
 C_IDX NUMBER PRIMARY KEY, -- 장바구니IDX
 C_STORE NUMBER NOT NULL, -- 매장IDX
 CB_IDX VARCHAR2(13) NOT NULL, -- 구매자IDX
 CP_IDX NUMBER NOT NULL, -- 상품IDX 
 C_COUNT NUMBER NOT NULL  -- 개수
);

CREATE SEQUENCE C_IDX_SEQ
 START WITH 1
 INCREMENT BY 1;

 alter table CART add constraint FK_C_STORE
 foreign key (C_STORE) references S_MEMBER (STORE) on delete cascade;

 alter table CART add constraint FK_CB_IDX
 foreign key (CB_IDX) references B_MEMBER (B_PHONE) on delete cascade;

 alter table CART add constraint FK_CP_IDX
 foreign key (CP_IDX) references PRODUCT (P_IDX) on delete cascade;


--주문내역 테이블
CREATE TABLE ORDERS(
 O_STORE NUMBER NOT NULL, --매장IDX
 OS_NAME VARCHAR2(100) NOT NULL, --매장이름
 O_CONTENT VARCHAR2(200) NOT NULL, --주문내역 (예: '아메리카노 1잔 외..')
 O_COUNT NUMBER NOT NULL, --총 개수
 O_SUM NUMBER NOT NULL, --총 가격
 O_IDX NUMBER PRIMARY KEY, --주문번호 systemcrrenttimesmillis로 구분
 O_STATUS NUMBER DEFAULT 1 NOT NULL, --주문현황 1: 주문접수 2: 주문수락(제조중) 3: 제조완료
 O_DATE DATE DEFAULT SYSDATE NOT NULL, --주문날짜
 O_PICK NUMBER NOT NULL, --픽업유무( 0 픽업,  1 매장)
 O_TIME DATE, -- 남은시간
 OB_IDX VARCHAR2(13) NOT NULL, --구매자IDX
 OCU_IDX NUMBER  -- 사용한 쿠폰번호
);


 alter table ORDERS add constraint FK_O_STORE
 foreign key (O_STORE) references S_MEMBER (STORE) on delete cascade;

 alter table ORDERS add constraint FK_OB_IDX
 foreign key (OB_IDX) references B_MEMBER (B_PHONE) on delete cascade; 

 alter table ORDERS add constraint FK_OCU_IDX
 foreign key (OCU_IDX) references COUPON (CU_IDX) on delete cascade; 


--주문한메뉴 테이블
CREATE TABLE ORDERS_MENU(
 OM_NAME VARCHAR2(100), -- 상품이름 
 OM_IMG VARCHAR2(100), --상품이미지
 OM_PRICE NUMBER NOT NULL, -- 가격
 OM_OP VARCHAR2(3000) NOT NULL, -- 옵션
 OM_IDX NUMBER NOT NULL, -- 주문번호 IDX
 OM_STORE NUMBER NOT NULL, -- 매장IDX
 OMB_IDX VARCHAR2(13) NOT NULL, -- 구매자IDX
 OMP_IDX NUMBER NOT NULL, -- 상품IDX 
 OM_COUNT NUMBER NOT NULL  -- 개수
);

 alter table ORDERS_MENU add constraint FK_OM_IDX
 foreign key (OM_IDX) references ORDERS(O_IDX) on delete cascade;


 alter table ORDERS_MENU add constraint FK_OM_STORE
 foreign key (OM_STORE) references S_MEMBER (STORE) on delete cascade;

 alter table ORDERS_MENU  add constraint FK_OMB_IDX
 foreign key (OMB_IDX) references B_MEMBER (B_PHONE) on delete cascade;

 alter table ORDERS_MENU add constraint FK_OMP_IDX
 foreign key (OMP_IDX) references PRODUCT (P_IDX) on delete cascade;



--즐겨찾기 테이블
CREATE TABLE BOOKMARK(
 B_STORE NUMBER NOT NULL, -- 매장고유번호
 BS_NAME VARCHAR2(100) NOT NULL, -- 매장이름
 BB_IDX VARCHAR2(13) NOT NULL, -- 구매자
 B_IDX NUMBER PRIMARY KEY 
);

 alter table BOOKMARK add constraint FK_B_STORE
 foreign key (B_STORE) references S_MEMBER (STORE) on delete cascade;

 alter table BOOKMARK add constraint FK_BB_IDX
 foreign key (BB_IDX) references B_MEMBER (B_PHONE) on delete cascade;

CREATE SEQUENCE B_IDX_SEQ
 START WITH 1
 INCREMENT BY 1;



--공지테이블
CREATE TABLE NOTICE(
 N_IDX NUMBER PRIMARY KEY, -- 게시글IDX
 N_TITLE VARCHAR2(120) NOT NULL, -- 제목
 N_CONTENT VARCHAR2(600) NOT NULL, -- 내용
 N_DATE DATE DEFAULT SYSDATE NOT NULL, -- 날짜
 N_IMAGE VARCHAR2(100) , --공지사항 이미지
 N_TYPE VARCHAR2(1) NOT NULL --공지사항 타입(B:구매회원 공지사항, S:판매회원 공지사항, E:이벤트)
);

CREATE SEQUENCE N_IDX_SEQ
 START WITH 1
 INCREMENT BY 1;


--*마지막* 주문내역테이블 함수 한줄씩 추가하기 
/*O_IDX 날마다 시퀀스 초기화되는 날짜 시퀀스(한번에 다 입력하면 안됩니다. 하나씩 입력하셔야 합니다!)*/
/*시퀀스 생성*/
CREATE SEQUENCE O_IDX_SEQ
  START WITH 1
  INCREMENT BY 1;


/* 시퀀스 초기화 Procedure */
CREATE OR REPLACE PROCEDURE SZP_O_IDX_RESET(SEQ_NAME IN VARCHAR2)
IS
    L_VAL NUMBER;
BEGIN
 
    EXECUTE IMMEDIATE 'SELECT '|| SEQ_NAME ||'.NEXTVAL FROM DUAL' INTO L_VAL;
    
    EXECUTE IMMEDIATE 'ALTER SEQUENCE '|| SEQ_NAME ||' INCREMENT BY -'|| L_VAL ||' MINVALUE 0';
    
    EXECUTE IMMEDIATE 'SELECT '|| SEQ_NAME ||'.NEXTVAL FROM DUAL' INTO L_VAL;
    
    EXECUTE IMMEDIATE 'ALTER SEQUENCE '|| SEQ_NAME ||' INCREMENT BY 1 MINVALUE 0';
 
END;

/* 프로시저를 오라클 JOB에 등록*/
DECLARE
    X NUMBER;
BEGIN
        SYS.DBMS_JOB.SUBMIT
        (
              job => X
            , what =>
                'BEGIN
                        SZP_O_IDX_RESET(''O_IDX_SEQ'');
                 END;'
            , next_date => to_date('05-31-2017 00:00:00', 'mm/dd/yyyy hh24:mi:ss')
            , interval => 'TRUNC(SYSDATE+1)'
            , no_parse => FALSE
        );
        SYS.DBMS_OUTPUT.PUT_LINE('Job Number is : '|| to_char(X));
END;

/*날짜를 포함한 시퀀스 값을 가져오는 함수를 생성*/
CREATE OR REPLACE FUNCTION ZBF_GET_O_IDX(
    p_type in varchar2
) RETURN VARCHAR2
AS
     v_returnValue VARCHAR2(180);
BEGIN
 
    BEGIN
 
        select TO_CHAR(SYSDATE, 'YYMMDD') || LPAD(O_IDX_SEQ.nextval, 4, 0)
          into v_returnValue
          from dual;
 
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        v_returnValue := ' ';
      WHEN OTHERS THEN
        v_returnValue := ' ';
    END;
 
    RETURN v_returnValue;
END;